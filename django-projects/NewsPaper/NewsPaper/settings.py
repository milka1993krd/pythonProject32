"""
Django settings for NewsPaper project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os.path
from pathlib import Path
import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=)^pmv)-cbrt2ms9e9w3h*t-m(x&lx3ou6q@)ru$+^%id1n!l^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'django_filters',
    'django_apscheduler',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    'news',
    'sign'

]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'NewsPaper.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'NewsPaper.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

LOGIN_URL = '/accounts/login/'

LOGIN_REDIRECT_URL = '/sign'

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'none'

ACCOUNT_FORMS = {'signup': 'sign.forms.CommonSignupForm'}

EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'detkikonf123'
EMAIL_HOST_PASSWORD = 'Lkdj17y16'
EMAIL_USE_SSL = True

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER + 'autoscan23@yandex.ru'

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,

    "formatters": {
        "console_debug_formatter": {
            "format": "{asctime} {levelname} {message}",
            "style": "{",
        },
        "console_warning_formatter": {
            "format": "{asctime} {levelname} {message} {pathname}",
            "style": "{",
        },
        "console_error_formatter": {
            "format": "{asctime} {levelname} {message} {pathname} {exc_info}",
            "style": "{",
        },
        "file_general_log_formatter": {
            "format": "{asctime} {levelname} {module} {message}",
            "style": "{",
        },
        "file_errors_log_formatter": {
            "format": "{asctime} {levelname} {message} {pathname} {exc_info}",
            "style": "{",
        },
        "file_security_log_formatter": {
            "format": "{asctime} {levelname} {module} {message}",
            "style": "{",
        },
        "mail_admins_formatter": {
            "format": "{asctime} {levelname} {message} {pathname}",
            "style": "{",
        }
    },

    "handlers": {
        "console_debug": {
            "class": "logging.StreamHandler",
            "level": "DEBUG",
            "formatter": "console_debug_formatter",
        },
        "console_warning": {
            "class": "logging.StreamHandler",
            "level": "WARNING",
            "formatter": "console_warning_formatter",
        },
        "console_error": {
            "class": "logging.StreamHandler",
            "level": "ERROR",
            "formatter": "console_error_formatter",
        },
        "file_general_log": {
            "class": "logging.FileHandler",
            "filename": "general.log",
            "level": "INFO",
            "formatter": "file_general_log_formatter",
        },
        "file_errors_log": {
            "class": "logging.FileHandler",
            "filename": "errors.log",
            "level": "ERROR",
            "formatter": "file_errors_log_formatter",
        },
        "file_security_log": {
            "class": "logging.FileHandler",
            "filename": "security.log",
            "level": "INFO",
            "formatter": "file_security_log_formatter",
        },
        "mail_admins": {
            "class": "django.utils.log.AdminEmailHandler",
            "level": "ERROR",
            "formatter": "mail_admins_formatter",
        },
    },

    "loggers": {
        "django": {
            "handlers": ["console_debug", "console_warning", "console_error", "file_general_log"],
            "propagate": True,
        },
        "django.request": {
            "handlers": ["file_errors_log", "mail_admins"],
            "propagate": True,
        },
        "django.server": {
            "handlers": ["file_errors_log", "mail_admins"],
            "propagate": True,
        },
        "django.template": {
            "handlers": ["file_errors_log"],
            "propagate": True,
        },
        "django.db_backends": {
            "handlers": ["file_errors_log"],
            "propagate": True,
        },
        "django.security": {
            "handlers": ["file_security_log"],
            "propagate": True,
        },
    },
}